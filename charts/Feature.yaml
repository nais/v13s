environmentKinds:
  - management
values:
  apiserverIP:
    displayName: API server IP
    computed:
      template: '"{{.Env.apiserver_endpoint}}"'
  ingress.host:
    displayName: Ingress host
    config:
      type: string
    computed:
      template: '"{{ subdomain . "vulnerabilities" }}"'

  image.tag:
    displayName: Image tag
    config:
      type: string

  auth.audience:
    displayName: Required token audience
    config:
      type: string

  kubernetes.static:
    displayName: Static Kubernetes clusters
    description: Comma-separated list of clusters with static credentials on the format 'name|apiserverHost|token'
    config:
      type: string
      secret: true

  kubernetes.clusters:
    displayName: GKE clusters
    description: Comma-separated list of static resources to monitor
    config:
      type: string
    computed:
      template: |
        {{ if (eq .Tenant.Name "nav") }}
        {{- $tenantEnvs := filter "kind" "legacy" .Envs -}}
        {{ eachOf $tenantEnvs "name" | sortAlpha | join "," }}
        {{ else }}
        {{- $tenantEnvs := filter "kind" "tenant" .Envs -}}
        {{ eachOf $tenantEnvs "name" | sortAlpha | join "," }}
        {{ end }}

  github.organizations:
    displayName: Github Organizations
    config:
      type: string_array

  dockerconfigjson:
    displayName: Docker config json
    description: Docker config json for pulling images from registries
    config:
      type: string
      secret: true

  auth.serviceAccounts:
    displayName: Authorized service accounts
    computed:
      template: |
        - "{{ .Management.nais_api_serviceaccount_email }}"
    config:
      type: string_array

  dependencytrack.username:
    displayName: dependencytrack username
    config:
      type: string

  dependencytrack.password:
    displayName: dependencytrack password
    computed:
      template: |
        {{ .Env.v13s_dependencytrack_password | quote }}

  dependencytrack.url:
    displayName: dependencytrack URL
    computed:
      template: "http://dependencytrack-backend:8080/api"
    config:
      type: string

  database.instance:
    displayName: Cloud SQL instance name
    description: The name of the Cloud SQL instance
    computed:
      template: |
        {{ .Env.v13s_db_instance | quote }}

  database.public_ip:
    displayName: Cloud SQL instance public IP
    description: The Public IP Cloud SQL instance
    computed:
      template: |
        {{ .Env.v13s_db_instance_public_ip | quote }}

  database.name:
    displayName: Database name
    description: The name of the database
    computed:
      template: |
        {{ .Env.v13s_db_name | quote }}

  database.user:
    displayName: Database username
    description: The username for the database
    computed:
      template: |
        {{ .Env.v13s_db_user | quote }}

  database.password:
    config:
      type: string
      secret: true
    displayName: Database password
    description: The password for the database
    computed:
      template: |
        {{ .Env.v13s_db_password | quote }}

  serviceAccountEmail:
    displayName: Google service account email
    computed:
      template: |
        {{.Env.v13s_serviceaccount_email | quote}}

  resources.requests.cpu:
    displayName: CPU requests
    config:
      type: string

  resources.requests.memory:
    displayName: Memory requests
    config:
      type: string

  opentelemetry.collector.endpoint:
    displayName: OpenTelemetry collector endpoint
    description: Endpoint for the OpenTelemetry collector
    computed:
      template: |
        {{ .Env.otel_otlp_endpoint | quote }}
    config:
      type: string

  opentelemetry.enabled:
    displayName: Enable OpenTelemetry
    config:
      type: boolean