// Code generated by sqlc. DO NOT EDIT.

package sql

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AddWorkloadEvent(ctx context.Context, arg AddWorkloadEventParams) error
	BatchSuppressVulnerabilities(ctx context.Context, arg []BatchSuppressVulnerabilitiesParams) *BatchSuppressVulnerabilitiesBatchResults
	BatchUpdateImageState(ctx context.Context, arg []BatchUpdateImageStateParams) *BatchUpdateImageStateBatchResults
	BatchUpsertCve(ctx context.Context, arg []BatchUpsertCveParams) *BatchUpsertCveBatchResults
	BatchUpsertVulnerabilities(ctx context.Context, arg []BatchUpsertVulnerabilitiesParams) *BatchUpsertVulnerabilitiesBatchResults
	BatchUpsertVulnerabilitySummary(ctx context.Context, arg []BatchUpsertVulnerabilitySummaryParams) *BatchUpsertVulnerabilitySummaryBatchResults
	CountSuppressedVulnerabilities(ctx context.Context, arg CountSuppressedVulnerabilitiesParams) (int64, error)
	CountVulnerabilities(ctx context.Context, arg CountVulnerabilitiesParams) (int64, error)
	CreateImage(ctx context.Context, arg CreateImageParams) error
	CreateSourceRef(ctx context.Context, arg CreateSourceRefParams) error
	CreateVulnerabilitySummary(ctx context.Context, arg CreateVulnerabilitySummaryParams) (*VulnerabilitySummary, error)
	CreateWorkload(ctx context.Context, arg CreateWorkloadParams) (*Workload, error)
	DeleteSourceRef(ctx context.Context, arg DeleteSourceRefParams) error
	DeleteWorkload(ctx context.Context, arg DeleteWorkloadParams) (pgtype.UUID, error)
	GenerateVulnerabilitySummaryForImage(ctx context.Context, arg GenerateVulnerabilitySummaryForImageParams) (*GenerateVulnerabilitySummaryForImageRow, error)
	GetCve(ctx context.Context, cveID string) (*Cve, error)
	GetEarliestSeveritySinceForVulnerability(ctx context.Context, arg GetEarliestSeveritySinceForVulnerabilityParams) (pgtype.Timestamptz, error)
	GetImage(ctx context.Context, arg GetImageParams) (*Image, error)
	GetImagesScheduledForSync(ctx context.Context) ([]*Image, error)
	GetLastSnapshotDateForVulnerabilitySummary(ctx context.Context) (pgtype.Date, error)
	GetSourceRef(ctx context.Context, arg GetSourceRefParams) (*SourceRef, error)
	GetVulnerability(ctx context.Context, arg GetVulnerabilityParams) (*GetVulnerabilityRow, error)
	GetVulnerabilityById(ctx context.Context, id pgtype.UUID) (*GetVulnerabilityByIdRow, error)
	GetVulnerabilitySummary(ctx context.Context, arg GetVulnerabilitySummaryParams) (*GetVulnerabilitySummaryRow, error)
	GetVulnerabilitySummaryForImage(ctx context.Context, arg GetVulnerabilitySummaryForImageParams) (*VulnerabilitySummary, error)
	GetVulnerabilitySummaryTimeSeries(ctx context.Context, arg GetVulnerabilitySummaryTimeSeriesParams) ([]*GetVulnerabilitySummaryTimeSeriesRow, error)
	GetWorkload(ctx context.Context, arg GetWorkloadParams) (*Workload, error)
	InitializeWorkload(ctx context.Context, arg InitializeWorkloadParams) (pgtype.UUID, error)
	ListJobsForWorkload(ctx context.Context, arg ListJobsForWorkloadParams) ([]*ListJobsForWorkloadRow, error)
	ListMeanTimeToFixTrendBySeverity(ctx context.Context, arg ListMeanTimeToFixTrendBySeverityParams) ([]*ListMeanTimeToFixTrendBySeverityRow, error)
	ListReferencingCves(ctx context.Context, lookupCveID string) ([]string, error)
	ListRiverJobs(ctx context.Context, arg ListRiverJobsParams) ([]*RiverJob, error)
	ListSeverityVulnerabilitiesSince(ctx context.Context, arg ListSeverityVulnerabilitiesSinceParams) ([]*ListSeverityVulnerabilitiesSinceRow, error)
	ListSuppressedVulnerabilities(ctx context.Context, arg ListSuppressedVulnerabilitiesParams) ([]*ListSuppressedVulnerabilitiesRow, error)
	ListSuppressedVulnerabilitiesForImage(ctx context.Context, imageName string) ([]*SuppressedVulnerability, error)
	ListUnusedImages(ctx context.Context, name *string) ([]*ListUnusedImagesRow, error)
	ListUnusedSourceRefs(ctx context.Context, name *string) ([]*SourceRef, error)
	ListVulnerabilities(ctx context.Context, arg ListVulnerabilitiesParams) ([]*ListVulnerabilitiesRow, error)
	ListVulnerabilitiesForImage(ctx context.Context, arg ListVulnerabilitiesForImageParams) ([]*ListVulnerabilitiesForImageRow, error)
	ListVulnerabilitiesForNamespaceAndCve(ctx context.Context, arg ListVulnerabilitiesForNamespaceAndCveParams) ([]*ListVulnerabilitiesForNamespaceAndCveRow, error)
	ListVulnerabilitySummaries(ctx context.Context, arg ListVulnerabilitySummariesParams) ([]*ListVulnerabilitySummariesRow, error)
	ListWorkloadSeverityFixStats(ctx context.Context, arg ListWorkloadSeverityFixStatsParams) ([]*ListWorkloadSeverityFixStatsRow, error)
	ListWorkloadStatus(ctx context.Context, arg ListWorkloadStatusParams) ([]*ListWorkloadStatusRow, error)
	ListWorkloadStatusWithJobs(ctx context.Context, arg ListWorkloadStatusWithJobsParams) ([]*ListWorkloadStatusWithJobsRow, error)
	ListWorkloadsByCluster(ctx context.Context, cluster string) ([]*Workload, error)
	ListWorkloadsByImage(ctx context.Context, arg ListWorkloadsByImageParams) ([]*ListWorkloadsByImageRow, error)
	ListWorkloadsForVulnerabilityById(ctx context.Context, vulnerabilityID pgtype.UUID) ([]*ListWorkloadsForVulnerabilityByIdRow, error)
	MarkImagesAsUntracked(ctx context.Context, arg MarkImagesAsUntrackedParams) (int64, error)
	MarkImagesForResync(ctx context.Context, arg MarkImagesForResyncParams) error
	MarkUnusedImages(ctx context.Context, arg MarkUnusedImagesParams) (int64, error)
	RefreshVulnerabilitySummaryDailyView(ctx context.Context) error
	RefreshVulnerabilitySummaryForDate(ctx context.Context, date pgtype.Date) error
	ResetDatabase(ctx context.Context) error
	SetWorkloadState(ctx context.Context, arg SetWorkloadStateParams) ([]*SetWorkloadStateRow, error)
	SuppressVulnerability(ctx context.Context, arg SuppressVulnerabilityParams) error
	UpdateImage(ctx context.Context, arg UpdateImageParams) error
	UpdateImageState(ctx context.Context, arg UpdateImageStateParams) error
	UpdateImageSyncStatus(ctx context.Context, arg UpdateImageSyncStatusParams) error
	UpdateWorkloadState(ctx context.Context, arg UpdateWorkloadStateParams) error
	UpsertVulnerabilityLifetimes(ctx context.Context) error
	UpsertWorkload(ctx context.Context, arg UpsertWorkloadParams) (pgtype.UUID, error)
}

var _ Querier = (*Queries)(nil)
